name: build
on:
  push:
  pull_request:
  workflow_dispatch:
permissions: {}
env:
  esp32platforms: |
    - name: esp32:esp32
      source-url: https://espressif.github.io/arduino-esp32/package_esp32_index.json
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends clang-15 clang-format-15 lcov libboost-dev libmbedtls-dev lld-15 llvm-15 ninja-build
          sudo pip install meson
      - name: Download VPP
        uses: actions/checkout@v4
        with:
          repository: FDio/vpp
          ref: v23.06
          path: vpp
      - name: Install libmemif
        run: |
          cd $HOME
          mv $GITHUB_WORKSPACE/vpp $HOME/
          mkdir libmemif-build && cd libmemif-build
          cmake -G Ninja ../vpp/extras/libmemif
          ninja
          sudo ninja install
      - uses: actions/checkout@v4
      - name: Check meson.build lists and code style
        run: |
          mk/update-list.sh
          mk/format-code.sh
          git diff --exit-code
      - name: Build and test with coverage
        run: |
          meson setup -Db_coverage=true -Dwerror=true -Dunittest=enabled -Dprograms=disabled build.coverage
          cd build.coverage
          if ! meson test; then
            cat meson-logs/testlog.txt && false
          fi
          ninja coverage
          lcov --extract meson-logs/coverage.info $(readlink -f ../src)'/*' > coverage.lcov
      - name: Build and test with sanitizer
        run: |
          meson setup -Db_sanitize=address,undefined -Dunittest=enabled -Dprograms=enabled build.sanitize
          cd build.sanitize
          if ! meson test; then
            cat meson-logs/testlog.txt && false
          fi
      - name: Build and test with LLVM
        run: |
          LDFLAGS='-fuse-ld=lld-15 -L/usr/local/lib' meson setup --native-file mk/native-llvm.ini --buildtype debugoptimized -Db_ndebug=true -Dwerror=true -Dunittest=enabled -Dprograms=enabled build.llvm
          cd build.llvm
          if ! meson test; then
            cat meson-logs/testlog.txt && false
          fi
      - uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: build.coverage/coverage.lcov
  arduino:
    strategy:
      matrix:
        include:
          - chip: ESP8266
            fqbn: esp8266:esp8266:nodemcuv2
            platforms: |
              - name: esp8266:esp8266
                source-url: https://arduino.esp8266.com/stable/package_esp8266com_index.json
          - chip: ESP32
            fqbn: esp32:esp32:esp32wrover
          - chip: ESP32C3
            fqbn: esp32:esp32:esp32c3
          - chip: nRF52
            fqbn: adafruit:nrf52:feather52832
            platforms: |
              - name: adafruit:nrf52
                source-url: https://adafruit.github.io/arduino-board-index/package_adafruit_index.json
            pip-deps: adafruit-nrfutil
      fail-fast: false
    name: ${{ matrix.chip }}
    runs-on: ubuntu-22.04
    steps:
      - run: pip install --user ${{ matrix.pip-deps }}
        if: ${{ matrix.pip-deps }}
      - uses: actions/checkout@v4
      - uses: arduino/compile-sketches@v1
        with:
          fqbn: ${{ matrix.fqbn }}
          platforms: ${{ matrix.platforms || env.esp32platforms }}
          libraries: |
            - source-path: ./
            - name: ArduinoUnit
